Changes         :             Using VAE Encoder 

enc_type        :             vae

Dataset         :             cifar10

===========================
feature_length  :             200

num_classes     :             10

Mean            :             (0.5, 0.5, 0.5)

Std             :             (0.5, 0.5, 0.5)

Batch_size      :             64

n_epoch         :             100

enc_in          :             3

enc_out         :             54

enc_modules     :             2

Lr_enc          :             0.000363

gen_in          :             3

gen_out         :             323

Lr_gen          :             0.000498

step_E          :             45

step_G          :             45

gammaE          :             0.100000

gammaG          :             0.100000

===========================
enc             :             ResNetEncoderVAE(
  
  (block): Sequential(
    (0): Conv2d(3, 54, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (1): BatchNorm2d(54, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.2, inplace=True)
  )
  (block1): ResBlock(
    (block): Sequential(
      (0): Conv2d(54, 108, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
      (Sequence_0): Sequential(
        (0): Conv2d(108, 108, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (shortcut): Sequential(
      (0): Conv2d(54, 108, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (block2): ResBlock(
    (block): Sequential(
      (0): Conv2d(108, 216, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
      (Sequence_0): Sequential(
        (0): Conv2d(216, 216, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (Activation_0): LeakyReLU(negative_slope=0.1, inplace=True)
      (Sequence_1): Sequential(
        (0): Conv2d(216, 216, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (shortcut): Sequential(
      (0): Conv2d(108, 216, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (block3): ResBlock(
    (block): Sequential(
      (0): Conv2d(216, 216, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
      (Sequence_0): Sequential(
        (0): Conv2d(216, 216, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (Activation_0): LeakyReLU(negative_slope=0.1, inplace=True)
      (Sequence_1): Sequential(
        (0): Conv2d(216, 216, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (shortcut): Sequential(
      (0): Conv2d(216, 216, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (block4): ResBlock(
    (block): Sequential(
      (0): Conv2d(216, 432, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): BatchNorm2d(432, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
      (Sequence_0): Sequential(
        (0): Conv2d(432, 432, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(432, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (Activation_0): LeakyReLU(negative_slope=0.1, inplace=True)
      (Sequence_1): Sequential(
        (0): Conv2d(432, 432, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(432, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (shortcut): Sequential(
      (0): Conv2d(216, 432, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(432, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (final): Sequential(
    (0): Conv2d(432, 400, kernel_size=(4, 4), stride=(1, 1))
    (1): Tanh()
  )
  (mu): Linear(in_features=400, out_features=200, bias=True)
  (logvar): Linear(in_features=400, out_features=200, bias=True)
)

gen             :             generator2(
  (main): Sequential(
    (0): ConvTranspose2d(210, 323, kernel_size=(5, 5), stride=(1, 1), bias=False)
    (1): BatchNorm2d(323, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.2, inplace=True)
    (3): ConvTranspose2d(323, 161, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (4): BatchNorm2d(161, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): LeakyReLU(negative_slope=0.2, inplace=True)
    (6): ConvTranspose2d(161, 161, kernel_size=(4, 4), stride=(2, 2), bias=False)
    (7): BatchNorm2d(161, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): LeakyReLU(negative_slope=0.2, inplace=True)
    (9): ConvTranspose2d(161, 80, kernel_size=(3, 3), stride=(1, 1), bias=False)
    (10): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (11): LeakyReLU(negative_slope=0.2, inplace=True)
    (12): ConvTranspose2d(80, 80, kernel_size=(3, 3), stride=(1, 1), bias=False)
    (13): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): LeakyReLU(negative_slope=0.2, inplace=True)
    (15): ConvTranspose2d(80, 40, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (16): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (17): LeakyReLU(negative_slope=0.2, inplace=True)
    (18): ConvTranspose2d(40, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): LeakyReLU(negative_slope=0.2, inplace=True)
    (21): ConvTranspose2d(20, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (22): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): LeakyReLU(negative_slope=0.2, inplace=True)
    (Final): Sequential(
      (0): ConvTranspose2d(10, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): Tanh()
    )
  )
)

